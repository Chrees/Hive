%nav.navbar.navbar-default
  .container
    .logo#showpage-logo= link_to "hiatus", root_path, data: { keybinding: 'x' }
    .controls-left
      #mode= inline_svg("Nightmode")
      = link_to inline_svg("Nextcat"), @post.nextcat, data: { keybinding: ['q'] }
    .controls-right
      #keys= link_to inline_svg("Keys"), shortcuts_path
      = link_to inline_svg("Prevcat"), @post.prevcat, data: { keybinding: ['e'] }
    .scroll= link_to "", post_path(:anchor => 'top'), data: { keybinding: ['w'] }
  
    
.image-wrapper
  = image_tag @post.image.url(:medium), :style =>  @post.css

= link_to @post.next, data: { keybinding: ['a','left'] } do
  #navfield_left
    .navicon= inline_svg("Next.svg")

= link_to @post.previous, data: { keybinding: ['d','right'] } do
  #navfield_right
    .navicon= inline_svg("Pre.svg")

= link_to @post.image.url, data: { keybinding: ['f'] } do
  #navfield_center

.col-md-6.col-md-offset-3
  .post-details
    .image-details
      = distance_of_time_in_words(Time.now, @post.created_at)
      ago to
      = link_to @post.category.name, posts_path(category:  @post.category.name)
    .image-details
      = link_to @post.image.url do
        %span.glyphicon.glyphicon-resize-full
        Full Resolution
    - if @post.source?
      .image-details
        = link_to @post.source do
          %span.glyphicon.glyphicon-link
          Source
    - if current_user == User.first
      .image-details
        = link_to edit_post_path do
          %span.glyphicon.glyphicon-wrench
        = link_to new_post_path do
          %span.glyphicon.glyphicon-plus
        = link_to post_path, method: :delete, data: { confirm: "Are you sure?" } do
          %span.glyphicon.glyphicon-remove
    .image-details.pull-right
      = link_to like_post_path(@post), method: :put, class: "likes" do
        = @post.get_upvotes.size
        %span.glyphicon.glyphicon-heart
    /.image-details.pull-right
    /  = link_to post_path(:anchor => 'bottom'), data: { keybinding: ['s'] } do
    /    = @post.comment_threads.count
    /    %span.glyphicon.glyphicon-comment
  %hr/
  %a.class{:name => "bottom"}
  .post-tags
    - @post.tag_list.each do |tag|
      .tags
        = link_to tag, tag_path(tag)
  - if @post.description.present?
    .description_wrapper= markdown @post.description
    %hr/
  /#comments
  /  = render :partial => 'comments/comment', :collection => @comments, :as => :comment
  /  = render :partial => 'comments/form', :locals => { :comment => @new_comment }
  .margin-bottom